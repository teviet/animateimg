.TH ANIMATEIMG 3 
.SH  "NAME"
.PP
\fB\fCanimateIMG\fR - display animated image sequence with javascript
.SH  "SYNOPSIS"
.PP
\fB\fC<script src="animateimg.js"></script>\fR
.PP
\fB\fCfunction animateIMG(\fR \fIsrcList\fR\fB\fC,\fR \fIparams\fR \fB\fC);\fR
.SH  "DESCRIPTION"
.PP
This function takes a sequence of images and produces an animation by
displaying them in succession within a specified \fB\fC<img>\fR element. The
images are specified by an array of strings \fIsrcList\fR that will be
loaded and then displayed in the frame. The \fIparams\fR object is a
structure whose members control the placement and other properties of
the animation.
.PP
For instance, if you have assigned the \fB\fC<img>\fR element an \fB\fCid\fR
attribute, then you may set \fIparams\fR\fB\fC\[char46]imgID\fR to that value in order to
display the animation in that element. Alternatively, if you have the
frame element object in the HTML Document Object Model, then you can
assign \fIparams\fR\fB\fC\[char46]img\fR to that object, which takes precedence over the
\fIparams\fR\[char46]\fB\fCimgID\fR field.
.PP
By default, the animation loops indefinitely, but can be paused by
clicking in the frame. Other \fIparams\fR fields can modify this
behaviour: see below.
.PP
Additionally, you can give the animation a "control panel" by pointing
it to a container element (usually a \fB\fC<div>\fR element), either by
assigning its \fB\fCid\fR property to \fIparams\fR\fB\fC\[char46]panelID\fR, or the HTML DOM
element itself to \fIparams\fR\fB\fC\[char46]panel\fR\[char46] The panel must be a positioned
element (i.e. have an explicit non-static \fB\fCposition:\fR property in its
style), and must have a width of more than 124 pixels wide at the time
the animation starts; otherwise \fB\fCanimateIMG\fR reverts to a plain
unadorned animation.
.PP
It is common to place the image element within the panel element, so
that the controls overlay the animation. Setting the \fIparams\fR\fB\fC\[char46]hide\fR
parameter will cause the controls to display only when you mouse over
the panel.
.PP
The animation will inherit any styling associated with the \fB\fC<img>\fR
element, such as explicit dimensions. It is also common to initialize
the \fB\fC<img>\fR tag with a "preview" image to display while the animation
is loading: that image will be replaced with the animation once all
animation frames have been loaded.
.SS  "Parameters: Plain Animation"
.PP
The following parameters are used when displaying an animation without
a control panel. As noted, only \fIsrcList\fR and one of \fIparams\fR\fB\fC\[char46]img\fR
or \fIparams\fR\fB\fC\[char46]imgID\fR are required; the rest are optional (with the
specified defaults)\[char46]

.RS
.EX
Parameter         Type     Description
----------------------------------------------------------------
srcList           array    Array of image src strings  
params.img        element  element to contain animation 
params.imgID      string   ID of element to contain animation
params.paused     boolean  Whether initially paused (false)
params.clickable  boolean  Whether clicking frame pauses (true)
params.cadence    number   Time in ms between frames (40)
params.loopcount  number   # of times animation will play (0)
.EE
.RE
.PP
Note that a non-positive \fIparams\fR\fB\fC\[char46]loopcount\fR means the animation will
loop indefinitely. Once the animation reaches its designated
loopcount, it will pause; if \fIparams\fR\fB\fC\[char46]clickable\fR is true then
clicking at the end of a loop sequence will start a new sequence. If
\fIparams\fR\fB\fC\[char46]clickable\fR is \fB\fCfalse\fR then \fIparams\fR\fB\fC\[char46]paused\fR is ignored,
unless the animation has a control panel (below)\[char46]
.SS  "Parameters: Animation With Control Panel"
.PP
When a control panel is present, the user can toggle whether the
animation loops or not. The \fIparams\fR\fB\fC\[char46]loopcount\fR property is ignored
except to set the initial state of the looping toggle: "off" if
\fIparams\fR\fB\fC\[char46]loopcount\fR is 1, "on" if it is anything else. The following
additional parameters are used, though only one of
\fIparams\fR\fB\fC\[char46]container\fR or \fIparams\fR\fB\fC\[char46]containerID\fR is required.

.RS
.EX
Parameter         Type     Description
----------------------------------------------------------------
params.panel      element  Element to place controls
params.panelID    string   ID of element to place controls
parame.icons      string   directory containing button icons (.)
params.speedup    number   Frame stride in fast-forward (5)
parame.hidden     boolean  Show panel only when hovering (false)
.EE
.RE
.SS  "Installing"
.PP
To use animations, simply place the \fB\fCanimateimg.js\fR in a
browser-accessible directory, note its URL, and load it in pages using
a \fB\fC<script src="\fR\fIURL\fR\fB\fC"></script>\fR element. Animations with control
panels also need button icons; see the \fBFiles\fR section, below.
.PP
The \fB\fCanimateimg.js\fR file also contains the source code documentation,
including this document. Running \fB\fCbash animateimg.js > README.md\fR
will extract the (markdown-formatted) documentation. The
\fB\fCREADME.html\fR demo page and \fB\fCanimateIMG.3\fR Unix manpage included with
this distribution were generated from the \fB\fCREADME.md\fR using standard
converters.
.SH  "RETURN VALUE"
.PP
If \fB\fCanimateIMG\fR encounters an error parsing \fIparams\fR, then it returns
\fB\fCundefined\fR\[char46] Otherwise, it returns an object containing several state
parameters and methods for interacting with the animation. Normally
this can be ignored unless you plan to write additional javascript
code or handlers to interact with the animation. The returned object
has the the following properties:

.RS
.EX
Property   Type      Description
----------------------------------------------------------------
max        number    Total number of frames to be displayed
count      number    Current frame displayed
paused     boolean   Whether currently paused
loop       boolean   Whether currently set to loop
loopcount  number    Requested number of loops (rounded)
loopno     number    Current loop number
stride     number    Current frame stride
speedup    number    Frame stride to be used in fast-forward
cadence    number    Current time in ms between frames
play()     function  Run animation
pause()    function  Pause/stop animation
seek(n)    function  Jump to frame n
reset()    function  Restore to state before calling animation
.EE
.RE
.SH  "FILES"
.PP
The default buttons and other icons for the control panel are given in
the \fB\fCicons\fR subdirectory of this distribution, and are linked below;
note that most are pure white PNGs with variable opacity, intended to
be viewed on a dark background (such as the \fB\fCback.png\fR image used in
the control panel)\[char46] If you are viewing this documentation as
\fB\fCREADME.md\fR on GitHub, the icons below will be nearly invisible
white-on-white. Cloning the repository and viewing \fB\fCREADME.html\fR will
show the icons properly, and also display the demo animations in the
\fBExample\fR section.
.PP

 (icons/home.png)
 (icons/rr.png)
 (icons/rstep.png)
 (icons/pause.png)
 (icons/play.png)
 (icons/fstep.png)
 (icons/ff.png)
 (icons/end.png)
 (icons/loop.png)
 (icons/noloop.png)
 (icons/back.png)
 (icons/bar.png)
 (icons/scrollbar.png)
 (icons/slider.png)
.PP
You will likely want to copy these icons to a suitable
browser-viewable directory. The URL of the icon directory can be
specified per-animation basis with the \fIparams\fR\fB\fC\[char46]icons\fR parameter. If
\fIparams\fR\fB\fC\[char46]icons\fR is not specified, the animation will use a default
global variable declared in \fB\fCanimateimg.js\fR:

.RS
.EX
var animateimg_default_icons = "";
.EE
.RE
.PP
You may edit this as necessary for your own installation. A value of
"" means that \fB\fCanimateIMG\fR will look for icons in the same directory
as the page being viewed; relative URLs are also possible. You may
also create your own icons, either globally or on a per-page or
per-animation basis. Note that in the current implementation all
"button" icons will be scaled to 20x20 pixels, while the "bar" icons
will appear 20px high and stretched to fit the horizontal width of the
panel.
.SH  "NOTES"
.PP
The function will replace the image element, and set the \fB\fConmouseover\fR
and \fB\fConmouseout\fR properties of the control panel element. These are
saved, and can be restored by calling the returned object's 
.BR \fB\fCreset ()\fR
method. Other properties of this element are left unchanged.
.PP
If \fIsrcList\fR contains only a single entry, then \fB\fCanimateIMG\fR does not
perform any animation; it simply replaces the image with that frame.
In this case the returned object contains only a single property, the
.BR \fB\fCreset ()\fR
method, which restores the original image.
.SH  "EXAMPLE"
.PP
The following HTML snippet loads the 
.BR \fB\fCanimateIMG ()\fR
function, and also
places the images \fB\fCexample/image_1.png\fR through
\fB\fCexample/image_250.png\fR into the array \fB\fCimglist\fR:

.RS
.EX
<script src="animateimg.js"></script>
<script>
var i, imglist = [];
for ( i = 1; i <= 250; i++ )
    imglist.push( "example/image_" + i + ".png" );
</script>
.EE
.RE
.PP
The default (looping, click-to-pause) animation simply places these
images into a specified \fB\fC<img>\fR element, which may or may not already
have a "preview" image::

.RS
.EX
<img id="im1" src="example/preview1.png">
<script>
animateIMG( imglist, { imgID: "im1" } );
</script>
.EE
.RE
.PP


.PP
To give the animation a full set of controls, specify a positioned
container with a known or calculable width (e.g. a \fB\fC<div>\fR or \fB\fC<td>\fR
element , not a \fB\fC<span>\fR element)\[char46] This container may include the
animation itsel, in which case it is convenient to show the controls
only when hovering with the mouse. Be sure to give it a non-static
\fB\fCposition:\fR style; a \fB\fC<div>\fR may also need to be specified with
\fB\fCdisplay: inline-block;\fR to allow it to resize according to its
contents. E.g.

.RS
.EX
<div style="position: relative; display: inline-block;"
     id="panel"><img id="im2" src="example/preview2.png"></div>
<script>
animateIMG( imglist, { imgID: "im2", panelID: "panel",
                       icons: "icons", hidden: true } );
</script>
.EE
.RE
.PP
Although they display the same set of images, the two animations run
in separate \fB\fC<img>\fR elements, and the two calls to \fB\fCanimateIMG\fR create
separate instances of the underlying objects. Thus, the animations
run completely independently of one another.
.SH  "SEE ALSO"
.PP
W3Schools (http://www.w3schools.com)
